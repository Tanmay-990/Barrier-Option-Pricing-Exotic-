import numpy as np
import time
import matplotlib.pyplot as plt

Starttime= time.time()

S = 100         # Stock Price
K = 100         # Strike Price
R = 0.06        # Risk Free Rate
T = 1           # Time (years)
Vol = 0.3       # Volatility
Bar = 125       # BarrierLevel
N = 100         # Number of Time Steps
M = 100         # Number of Simulations


#defining Geometric Brownian Motion
dt    = T/N
det   = (R - 0.5*Vol**2)*dt
drift = Vol*np.sqrt(dt)

#sum of cashflows
sumCF=0

#Using MonteCarlo for generating the simulated price
for i in range(M):
  St=S

  for j in range(N):
    St = St*np.exp(det + np.random.normal()*drift)
    ar1=ar.append(St)

    if St >= Bar:
      CF=0
      break
  CF = max(0,K-St)
  sumCF += CF

#Calculating Expected Price of Put Option
Put = (sumCF/M)  *  np.exp(-R*T)  #discounting the Calculted price

print("Price of Put is ${0}".format(round(Put,2)))
print("Time taken is ", round(time.time() - Starttime,3),"seconds.")
print(St)
